#pragma once

#include <util/generic/strbuf.h>
#include <util/generic/vector.h>

namespace NYql {

const TStringBuf YqlRowSpecAttribute = AsStringBuf("_yql_row_spec");

const TStringBuf RowSpecAttrType = AsStringBuf("Type");
const TStringBuf RowSpecAttrStrictSchema = AsStringBuf("StrictSchema");
const TStringBuf RowSpecAttrUniqueKeys = AsStringBuf("UniqueKeys");
const TStringBuf RowSpecAttrSortDirections = AsStringBuf("SortDirections");
const TStringBuf RowSpecAttrSortMembers = AsStringBuf("SortMembers");
const TStringBuf RowSpecAttrSortedBy = AsStringBuf("SortedBy");
const TStringBuf RowSpecAttrSortedByTypes = AsStringBuf("SortedByTypes");
const TStringBuf RowSpecAttrDefaultValues = AsStringBuf("DefaultValues");

const TStringBuf YqlReadUdfAttribute = AsStringBuf("_yql_read_udf");
const TStringBuf YqlReadUdfTypeConfigAttribute = AsStringBuf("_yql_read_udf_type_config");
const TStringBuf YqlReadUdfRunConfigAttribute = AsStringBuf("_yql_read_udf_run_config");
const TStringBuf YqlViewPrefixAttribute = AsStringBuf("_yql_view_");
const TStringBuf YqlProtoFieldPrefixAttribute = AsStringBuf("_yql_proto_field_");

const TStringBuf YqlOthersColumnName = AsStringBuf("_other");
const TStringBuf YqlTypeAttribute = AsStringBuf("_yql_type");
const TStringBuf YqlTypeView = AsStringBuf("view");

const TStringBuf QB2Premapper = AsStringBuf("_qb2_premapper");

// Generated by SQL parser
const TStringBuf MrTableRangeName = AsStringBuf("MrTableRange");
const TStringBuf MrTableRangeStrictName = AsStringBuf("MrTableRangeStrict");
const TStringBuf MrTableConcatName = AsStringBuf("MrTableConcat");

// YT related names
const TStringBuf READ_SCHEMA_ATTR_NAME = AsStringBuf("_read_schema");
const TStringBuf SCHEMA_ATTR_NAME = AsStringBuf("schema");
const TStringBuf FORMAT_ATTR_NAME = AsStringBuf("_format");

const TStringBuf KeyFilterName = AsStringBuf("keyFilter");

extern TVector<TStringBuf> YAMR_FIELDS;

}
