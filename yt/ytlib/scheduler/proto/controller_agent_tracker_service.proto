package NYT.NScheduler.NProto;

import "yt/core/misc/proto/guid.proto";
import "yt/core/misc/proto/error.proto";
import "yt/ytlib/job_tracker_client/job.proto";

////////////////////////////////////////////////////////////////////////////////

message TJobResources
{
    optional int32 user_slots = 1;
    optional double cpu = 2;
    optional int64 memory = 3;
    optional int32 network = 4;
}

message TExecNodeDescriptor
{
    required int32 node_id = 1;
    required string address = 2;
    required double io_weight = 3;
    required TJobResources resource_limits = 4;
    repeated string tags = 5;
}

message TExecNodeDescriptorList
{
    repeated TExecNodeDescriptor exec_nodes = 1;
}

message TJobMetrics
{
    optional int64 disk_reads = 1;
    optional int64 disk_writes = 2;
    optional int64 time_completed = 3;
    optional int64 time_aborted = 4;
}

message TTreeTaggedJobMetrics
{
    required string tree_id = 1;
    optional TJobMetrics metrics = 2;
}

message TOperationJobMetrics
{
    required NYT.NProto.TGuid operation_id = 1;
    repeated TTreeTaggedJobMetrics metrics = 2;
}

message TAgentToSchedulerOperationEvent
{
    required NYT.NProto.TGuid operation_id = 1;
    required int32 event_type = 2; // EAgentToSchedulerOperationEventType
    optional NYT.NProto.TError error = 3;
}

message TAgentToSchedulerJobEvent
{
    required NYT.NProto.TGuid job_id = 1;
    required int32 event_type = 2; // EAgentToSchedulerJobEventType
    optional NYT.NProto.TError error = 3;
    optional int32 interrupt_reason = 4; // EInterruptReason
}

message TSchedulerToAgentJobEvent
{
    required NYT.NProto.TGuid job_id = 1;
    required int32 event_type = 2; // EJobEvent
    optional NYT.NJobTrackerClient.NProto.TJobStatus status = 3;
    optional int32 state = 4; // EJobState
    optional uint64 start_time = 5; // for EJobEvent::Started only
    optional uint64 finish_time = 6;
    optional bool abandoned = 7; // for EJobEvent::Completed only
    optional int32 abort_reason = 8; // for EJobEvent::Aborted only
}

////////////////////////////////////////////////////////////////////////////////

message TReqHeartbeat
{
    message TOperationAlerts
    {
        message TAlert
        {
            required int32 type = 1;
            required NYT.NProto.TError error = 2;
        }

        required NYT.NProto.TGuid operation_id = 1;
        repeated TAlert alerts = 2;
    }

    message TAgentToSchedulerOperationEventQueue
    {
        required int64 first_item_id = 1;
        repeated TAgentToSchedulerOperationEvent items = 2;
    }

    message TAgentToSchedulerJobEventQueue
    {
        required int64 first_item_id = 1;
        repeated TAgentToSchedulerJobEvent items = 2;
    }

    required NYT.NProto.TGuid agent_incarnation_id = 13;

    repeated TOperationJobMetrics job_metrics = 1;

    repeated TOperationAlerts operation_alerts = 6;

    required bool exec_nodes_requested = 7;

    optional bytes suspicious_jobs = 8;

    required TAgentToSchedulerOperationEventQueue agent_to_scheduler_operation_events_queue = 9;
    required TAgentToSchedulerJobEventQueue agent_to_scheduler_job_events_queue = 10;
}

message TRspHeartbeat
{
    message TEventQueue
    {
        required int64 next_expected_item_id = 1;
    }

    optional TExecNodeDescriptorList exec_nodes = 1;
    required TEventQueue agent_to_scheduler_operation_events_queue = 2;
    required TEventQueue agent_to_scheduler_job_events_queue = 3;
}

////////////////////////////////////////////////////////////////////////////////

