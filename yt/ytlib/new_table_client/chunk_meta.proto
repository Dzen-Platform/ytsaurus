package NYT.NVersionedTableClient.NProto;

import "yt/ytlib/chunk_client/chunk_meta.proto";
import "yt/ytlib/chunk_client/chunk_spec.proto";
import "yt/ytlib/chunk_client/schema.proto";

////////////////////////////////////////////////////////////////////////////////

message TColumnSchema
{
    required string name = 1;
    required int32 type = 2;
    optional string lock = 3;
}

message TTableSchemaExt
{
    repeated TColumnSchema columns = 1;
}

message TNameTableExt
{
    repeated string names = 1;
}

message TBlockMeta
{
    required int32 row_count = 1;
    required int32 uncompressed_size = 2;
    required int64 chunk_row_count = 3;
    required int32 block_index = 4;

    // ToDo: move to extension
    repeated int32 fixed_column_sizes = 5;
    optional int32 variable_buffer_offset = 6;
    optional int32 end_of_key_flags_offset = 7;

    optional int32 partition_index = 8 [default = 0];

    extensions 100 to max;
}

message TSimpleVersionedBlockMeta
{
    extend TBlockMeta
    {
        optional TSimpleVersionedBlockMeta block_meta_ext = 100;
    }

    required int32 value_count = 1;
    required int32 timestamp_count = 2;
}

message TBlockMetaExt
{
    repeated TBlockMeta blocks = 1;
}

message TBlockIndexExt
{
    // Number of entries equals to block count.
    repeated bytes entries = 1;
}

// Chunk meta extension.
message TBoundaryKeysExt
{
    required bytes min = 1;
    required bytes max = 2;
}

message TSamplesExt
{
    repeated bytes entries = 1;
}

message TPartitionsExt
{
    repeated NChunkClient.NProto.TSizeOverrideExt partitions = 1;
}

message TKeyColumnsExt
{
    repeated string names = 1;
}

////////////////////////////////////////////////////////////////////////////////
