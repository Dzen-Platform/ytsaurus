package NYT.NTabletClient.NProto;

import "yt/core/misc/guid.proto";
import "yt/ytlib/hive/cell_directory.proto";

////////////////////////////////////////////////////////////////////////////////

message TTabletSlotInfo
{
    required int32 peer_state = 1;
    optional int32 peer_id = 2;
    optional NYT.NHiveClient.NProto.TCellInfo cell_info = 3;
}

message TTabletStatistics
{
    required int32 partition_count = 1;
    required int32 store_count = 2;
    required int32 preload_pending_store_count = 3;
    required int32 preload_completed_store_count = 4;
    required int32 preload_failed_store_count = 5;
    required uint64 last_commit_timestamp = 6;
}

message TTabletPerformanceCounters
{
    required int64 dynamic_row_read_count = 1;
    required int64 dynamic_row_lookup_count = 2;
    required int64 dynamic_row_write_count = 3;
    required int64 dynamic_row_delete_count = 4;
    required int64 static_chunk_row_read_count = 5;
    required int64 static_chunk_row_lookup_count = 6;
    required int64 static_chunk_row_lookup_true_negative_count = 9;
    required int64 static_chunk_row_lookup_false_positive_count = 10;
    required int64 unmerged_row_read_count = 7;
    required int64 merged_row_read_count = 8;
}

message TTabletInfo
{
    required NYT.NProto.TGuid tablet_id = 1;
    required TTabletStatistics statistics = 2;
    required TTabletPerformanceCounters performance_counters = 3;
}

message TCreateTabletSlotInfo
{
    required NYT.NProto.TGuid cell_id = 1;
    required int32 peer_id = 2;
    required bytes options = 3; // NTabletClient::TTabletCellOptions
}

message TConfigureTabletSlotInfo
{
    required NYT.NHiveClient.NProto.TCellDescriptor cell_descriptor = 1;
    required NYT.NProto.TGuid prerequisite_transaction_id = 2;
}

message TRemoveTabletSlotInfo
{
    required NYT.NProto.TGuid cell_id = 1;
}

////////////////////////////////////////////////////////////////////////////////

