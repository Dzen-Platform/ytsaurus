#pragma once

#include <yt/core/misc/common.h>

namespace NYT {

////////////////////////////////////////////////////////////////////////////////

constexpr ui32 NullMemoryTag = 0;

////////////////////////////////////////////////////////////////////////////////

class TMemoryTagGuard
{
public:
    TMemoryTagGuard() = default;
    TMemoryTagGuard(ui32 tag);
    ~TMemoryTagGuard();

    TMemoryTagGuard(const TMemoryTagGuard& other) = delete;
    TMemoryTagGuard(TMemoryTagGuard&& other);
private:
    bool Active_ = false;
    ui32 PreviousTag_ = NullMemoryTag;
};

////////////////////////////////////////////////////////////////////////////////

} // namespace NYT

////////////////////////////////////////////////////////////////////////////////

// Implemented in lf_allocX64.cpp.
void SetCurrentMemoryTag(ui64 tag);
ui64 GetCurrentMemoryTag();
ssize_t GetMemoryCounterForTag(ui64 tag);

////////////////////////////////////////////////////////////////////////////////
