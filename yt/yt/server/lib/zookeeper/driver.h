#pragma once

#include "public.h"

#include <library/cpp/yt/memory/ref.h>

namespace NYT::NZookeeper {

////////////////////////////////////////////////////////////////////////////////

struct IDriver
    : public TRefCounted
{
    virtual TSharedRef ExecuteRequest(ISessionPtr session, TSharedRef request) noexcept = 0;
};

DEFINE_REFCOUNTED_TYPE(IDriver)

////////////////////////////////////////////////////////////////////////////////

IDriverPtr CreateDriver(IClientPtr client);

////////////////////////////////////////////////////////////////////////////////

} // namespace NYT::NZookeeper
