package NYT.NJobTrackerClient.NProto;

import "yt_proto/yt/core/misc/proto/error.proto";
import "yt_proto/yt/core/misc/proto/guid.proto";
import "yt_proto/yt/client/node_tracker_client/proto/node.proto";

////////////////////////////////////////////////////////////////////////////////

message TPreemptedFor
{
    required NYT.NProto.TGuid operation_id = 1;
    required NYT.NProto.TGuid job_id = 2;
}

// Describes a job to be run at a node.
message TJobSpec
{
    required int32 type = 1;
    optional int32 version = 2;

    //! If true, job result is reported via out-of-order heartbeat.
    optional bool urgent = 3 [default = false];

    extensions 100 to max;
}

// Describes the outcome of the job, in particular if it has finished successfully.
message TJobResult
{
    required NYT.NProto.TError error = 1;

    extensions 100 to max;
}

// Describes release job flags.
message TReleaseJobFlags
{
    required bool archive_job_spec = 1;
    required bool archive_stderr = 2;
    required bool archive_fail_context = 3;
    required bool archive_profile = 4;
};

message TTimeStatistics
{
    optional int64 prepare_duration = 1;
    optional int64 exec_duration = 2;
    optional int64 artifacts_download_duration = 3;
    optional int64 prepare_root_fs_duration = 4;
    optional int64 gpu_check_duration = 5;
};

// Describes the current job status.
message TJobStatus
{
    required NYT.NProto.TGuid job_id = 1;
    optional NYT.NProto.TGuid operation_id = 2;
    optional int32 job_type = 3;
    optional int32 state = 4;
    optional int32 phase = 5;
    optional double progress = 6;
    optional TJobResult result = 7;
    optional NNodeTrackerClient.NProto.TNodeResources resource_usage = 8;
    optional bytes statistics = 9;
    optional int64 stderr_size = 13;

    optional int32 interruption_reason = 18;
    optional TPreemptedFor preempted_for = 19;

    optional TTimeStatistics time_statistics = 15;
    optional int64 status_timestamp = 16;
    optional bool job_execution_completed = 17 [default = false];
}

////////////////////////////////////////////////////////////////////////////////

