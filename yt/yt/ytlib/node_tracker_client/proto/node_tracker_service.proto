package NYT.NNodeTrackerClient.NProto;

import "yt_proto/yt/core/misc/proto/guid.proto";
import "yt_proto/yt/core/misc/proto/error.proto";
import "yt_proto/yt/client/node_tracker_client/proto/node.proto";
import "yt/ytlib/tablet_client/proto/heartbeat.proto";
import "yt/ytlib/chunk_client/proto/heartbeat.proto";
import "yt/ytlib/cellar_node_tracker_client/proto/heartbeat.proto";

// COMPAT(ifsmirnov)
import "yt/ytlib/data_node_tracker_client/proto/data_node_tracker_service.proto";

////////////////////////////////////////////////////////////////////////////////

message TReqRegisterNode
{
    required TNodeAddressMap node_addresses = 1;

    optional NYT.NProto.TGuid lease_transaction_id = 3;
    optional int32 node_id = 4;
    repeated string tags = 5;
    optional bytes cypress_annotations = 6; // YSON
    optional string build_version = 7;
    repeated int32 flavors = 8; // ENodeFlavor
    repeated NYT.NProto.TGuid location_uuids = 9;
    optional string host_name = 10;

    reserved 2;
}

message TRspRegisterNode
{
    required int32 node_id = 1;
    optional bool use_new_heartbeats = 2;
}

////////////////////////////////////////////////////////////////////////////////

message TReqFullHeartbeat
{
    required int32 node_id = 1;
    required TNodeStatistics statistics = 2;

    // Chunk Manager stuff.
    repeated NChunkClient.NProto.TChunkAddInfo chunks = 3;
    repeated TMediumChunkStatistics chunk_statistics = 4;
    optional bool write_sessions_disabled = 5;
}

message TRspFullHeartbeat
{
    // Hydra revision.
    optional uint64 revision = 1;

    // Chunk manager stuff.
    repeated NChunkClient.NProto.TChunkReplicaAnnouncementRequest replica_announcement_requests = 2;
    optional bool enable_lazy_replica_announcements = 3;
}

////////////////////////////////////////////////////////////////////////////////

message TReqIncrementalHeartbeat
{
    required int32 node_id = 1;

    // Node Tracker stuff.
    required TNodeStatistics statistics = 2;
    repeated NYT.NProto.TError alerts = 3;

    // Chunk Manager stuff.
    repeated NChunkClient.NProto.TChunkAddInfo added_chunks = 4;
    repeated NChunkClient.NProto.TChunkRemoveInfo removed_chunks = 5;
    optional bool write_sessions_disabled = 9;
    repeated NDataNodeTrackerClient.NProto.TConfirmedReplicaAnnouncementRequest confirmed_replica_announcement_requests = 10;

    // Tablet Manager stuff.
    repeated NCellarNodeTrackerClient.NProto.TCellSlotInfo tablet_slots = 6;
    repeated NTabletClient.NProto.TTabletInfo tablets = 8;
}

message TRspIncrementalHeartbeat
{
    // Hydra revision.
    optional uint64 revision = 13;

    // Tablet Manager stuff.
    repeated NCellarNodeTrackerClient.NProto.TCreateCellSlotInfo tablet_slots_to_create = 1;
    repeated NCellarNodeTrackerClient.NProto.TRemoveCellSlotInfo tablet_slots_to_remove = 2;
    repeated NCellarNodeTrackerClient.NProto.TConfigureCellSlotInfo tablet_slots_configure = 3;
    repeated NCellarNodeTrackerClient.NProto.TUpdateCellSlotInfo tablet_slots_update = 4;

    // Node Tracker stuff.
    optional string rack = 6;
    optional string data_center = 9;
    repeated string tags = 10;
    optional TNodeResourceLimitsOverrides resource_limits_overrides = 7;
    optional bool disable_scheduler_jobs = 8;
    optional bool disable_write_sessions = 11;
    optional bool decommissioned = 12;

    // Chunk manager stuff.
    repeated NChunkClient.NProto.TChunkReplicaAnnouncementRequest replica_announcement_requests = 14;
    optional bool enable_lazy_replica_announcements = 15;
}

////////////////////////////////////////////////////////////////////////////////

message TReqHeartbeat
{
    required int32 node_id = 1;

    required TClusterNodeStatistics statistics = 2;

    repeated NYT.NProto.TError alerts = 3;
}

message TRspHeartbeat
{
    optional string rack = 1;
    optional string data_center = 2;
    repeated string tags = 3;

    optional TNodeResourceLimitsOverrides resource_limits_overrides = 4;

    optional bool decommissioned = 5;
}

////////////////////////////////////////////////////////////////////////////////
