syntax = "proto2";

package NYT.NYqlClient.NProto;

import "yt_proto/yt/core/misc/proto/guid.proto";
import "yt_proto/yt/core/misc/proto/error.proto";

////////////////////////////////////////////////////////////////////////////////

// A counterpart to NYql::NEmbedded::TOperationRequest.
message TYqlRequest
{
    optional string query = 1;
    optional string title = 2;
    optional int64 syntax_version = 3 [default = 1];
    optional bytes attributes = 4; // YSON
    optional bytes parameters = 5; // YSON
    optional int64 mode = 6 [default = 2]; // EExecuteMode
}

// A counterpart to NYql::NEmbedded::IOperation and to NYqlClient::TYqlResponse.
message TYqlResponse
{
    optional string result = 1; // YSON
    optional string plan = 2; // YSON
    optional string statistics = 3; // YSON
    optional string task_info = 4; // YSON
}

////////////////////////////////////////////////////////////////////////////////

message TReqStartQuery
{
    optional bool async = 1;
    optional TYqlRequest yql_request = 2;
    optional bool build_rowsets = 3;
    optional int64 row_count_limit = 4;
    optional NYT.NProto.TGuid query_id = 5;
}

message TRspStartQuery
{
    optional NYT.NProto.TGuid query_id = 1;
    // May be missing if request mode is async.
    optional TYqlResponse yql_response = 2;

    // Filled only if build_rowset in request was false.
    // In such case there are as many attachments as there are errors in this field;
    // non-OK error corresponds to empty attachment and OK error corresponds to
    // wire-encoded schema + schemaful rowset attachment.
    repeated NYT.NProto.TError rowset_errors = 3;
    repeated bool incomplete = 4;
}

////////////////////////////////////////////////////////////////////////////////

