package NYT.NChaosClient.NProto;

import "yt_proto/yt/client/chaos_client/proto/replication_card.proto";
import "yt_proto/yt/core/misc/proto/guid.proto";

////////////////////////////////////////////////////////////////////////////////

message TReqCreateReplicationCard
{ }

message TRspCreateReplicationCard
{
    required NYT.NProto.TGuid replication_card_id = 1; // NChaosClient::TReplicationCardId
}

////////////////////////////////////////////////////////////////////////////////

message TReqGetReplicationCard
{
    required NYT.NProto.TGuid replication_card_id = 1; // NChaosClient::TReplicationCardId
    optional TReplicationCardFetchOptions fetch_options = 2;
}

message TRspGetReplicationCard
{
    required TReplicationCard replication_card = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqCreateTableReplica
{
    required NYT.NProto.TGuid replication_card_id = 1; // NChaosClient::TReplicationCardId
    required TReplicaInfo replica_info = 2;
}

message TRspCreateTableReplica
{
    required NYT.NProto.TGuid replica_id = 1; // NChaosClient::TReplicaId
}

////////////////////////////////////////////////////////////////////////////////

message TReqRemoveTableReplica
{
    required NYT.NProto.TGuid replication_card_id = 1; // NChaosClient::TReplicationCardId
    required NYT.NProto.TGuid replica_id = 2; // NChaosClient::TReplicaId
}

message TRspRemoveTableReplica
{ }

////////////////////////////////////////////////////////////////////////////////

message TReqAlterTableReplica
{
    required NYT.NProto.TGuid replication_card_id = 1; // NChaosClient::TReplicationCardId
    required NYT.NProto.TGuid replica_id = 2; // NChaosClient::TReplicaId
    optional int32 mode = 3; // NChaosClient::EReplicaMode
    optional int32 state = 4; // NChaosClient::EReplicaState
    optional string table_path = 5;
}

message TRspAlterTableReplica
{ }

////////////////////////////////////////////////////////////////////////////////

message TReqUpdateReplicationProgress
{
    required NYT.NProto.TGuid replication_card_id = 1; // NChaosClient::TReplicationCardId
    required NYT.NProto.TGuid replica_id = 2; // NChaosClient::TReplicaId
    required TReplicationProgress replication_progress = 3;
}

message TRspUpdateReplicationProgress
{ }

////////////////////////////////////////////////////////////////////////////////
