commit 4dfc6cb40ee326d7cc7647d95cd7cd0a52fe23f7
author: alex-shishkin
date: 2022-10-17T16:57:09+03:00

    ports_publishing

--- taxi/dmp/spark/spark/core/src/main/scala/org/apache/spark/deploy/master/MasterArguments.scala	(a3903af4981cb29aced219e5df6a6fbb640f49c0)
+++ taxi/dmp/spark/spark/core/src/main/scala/org/apache/spark/deploy/master/MasterArguments.scala	(4dfc6cb40ee326d7cc7647d95cd7cd0a52fe23f7)
@@ -21,7 +21,7 @@ import scala.annotation.tailrec
 
 import org.apache.spark.SparkConf
 import org.apache.spark.internal.Logging
-import org.apache.spark.internal.config.MASTER_UI_PORT
+import org.apache.spark.internal.config._
 import org.apache.spark.util.{IntParam, Utils}
 
 /**
@@ -57,6 +57,7 @@ private[master] class MasterArguments(args: Array[String], conf: SparkConf) exte
   if (conf.contains(MASTER_UI_PORT.key)) {
     webUiPort = conf.get(MASTER_UI_PORT)
   }
+  conf.get(MASTER_SERVER_PORT).foreach { port = _ }
 
   @tailrec
   private def parse(args: List[String]): Unit = args match {
--- taxi/dmp/spark/spark/core/src/main/scala/org/apache/spark/deploy/worker/WorkerArguments.scala	(a3903af4981cb29aced219e5df6a6fbb640f49c0)
+++ taxi/dmp/spark/spark/core/src/main/scala/org/apache/spark/deploy/worker/WorkerArguments.scala	(4dfc6cb40ee326d7cc7647d95cd7cd0a52fe23f7)
@@ -61,6 +61,7 @@ private[worker] class WorkerArguments(args: Array[String], conf: SparkConf) {
   propertiesFile = Utils.loadDefaultSparkProperties(conf, propertiesFile)
 
   conf.get(WORKER_UI_PORT).foreach { webUiPort = _ }
+  conf.get(WORKER_PORT).foreach { port = _ }
 
   checkWorkerMemory()
 
--- taxi/dmp/spark/spark/core/src/main/scala/org/apache/spark/internal/config/Worker.scala	(a3903af4981cb29aced219e5df6a6fbb640f49c0)
+++ taxi/dmp/spark/spark/core/src/main/scala/org/apache/spark/internal/config/Worker.scala	(4dfc6cb40ee326d7cc7647d95cd7cd0a52fe23f7)
@@ -89,4 +89,8 @@ private[spark] object Worker {
       .version("3.2.0")
       .stringConf
       .createWithDefaultString("PWR")
+
+  val WORKER_PORT = ConfigBuilder("spark.worker.port")
+    .intConf
+    .createOptional
 }
--- taxi/dmp/spark/spark/core/src/main/scala/org/apache/spark/internal/config/package.scala	(a3903af4981cb29aced219e5df6a6fbb640f49c0)
+++ taxi/dmp/spark/spark/core/src/main/scala/org/apache/spark/internal/config/package.scala	(4dfc6cb40ee326d7cc7647d95cd7cd0a52fe23f7)
@@ -1708,6 +1708,10 @@ package object config {
     .intConf
     .createWithDefault(8080)
 
+  private[spark] val MASTER_SERVER_PORT = ConfigBuilder("spark.master.port")
+    .intConf
+    .createOptional
+
   private[spark] val IO_COMPRESSION_SNAPPY_BLOCKSIZE =
     ConfigBuilder("spark.io.compression.snappy.blockSize")
       .doc("Block size in bytes used in Snappy compression, in the case when " +
