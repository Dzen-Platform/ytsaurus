#! /usr/bin/python
# This pyversions binary is wrapper over /usr/bin/pyversions that prints correctly supported python2 versions.

import sys
import subprocess

def main():
    from optparse import OptionParser
    usage = '[-v] [-h] [-d|--default] [-s|--supported] [-i|--installed] [-r|--requested <version string>|<control file>]'
    parser = OptionParser(usage=usage)
    parser.add_option('-d', '--default',
                      help='print the default python version',
                      action='store_true', dest='default')
    parser.add_option('-s', '--supported',
                      help='print the supported python versions',
                      action='store_true', dest='supported')
    parser.add_option('-r', '--requested',
                      help='print the python versions requested by a build; the argument is either the name of a control file or the value of the X(S)-Python-Version attribute',
                      action='store_true', dest='requested')
    parser.add_option('-i', '--installed',
                      help='print the installed supported python versions',
                      action='store_true', dest='installed')
    parser.add_option('-v', '--version',
                      help='print just the version number(s)',
                      default=False, action='store_true', dest='version_only')
    opts, args = parser.parse_args()

    if opts.requested and len(args) <= 1 and sys.version_info[0] == 2:
        print "2.7"
    else:
        subprocess.check_call(["/usr/bin/pyversions"] + sys.argv[1:], stdout=sys.stdout, stderr=sys.stderr)

if __name__ == '__main__':
    main()
