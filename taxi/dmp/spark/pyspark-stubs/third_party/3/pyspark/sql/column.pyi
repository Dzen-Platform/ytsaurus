# Stubs for pyspark.sql.column (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any
from pyspark.sql.types import *

class Column:
    def __init__(self, jc) -> None: ...
    __neg__ = ...  # type: Any
    __add__ = ...  # type: Any
    __sub__ = ...  # type: Any
    __mul__ = ...  # type: Any
    __div__ = ...  # type: Any
    __truediv__ = ...  # type: Any
    __mod__ = ...  # type: Any
    __radd__ = ...  # type: Any
    __rsub__ = ...  # type: Any
    __rmul__ = ...  # type: Any
    __rdiv__ = ...  # type: Any
    __rtruediv__ = ...  # type: Any
    __rmod__ = ...  # type: Any
    __pow__ = ...  # type: Any
    __rpow__ = ...  # type: Any
    __eq__ = ...  # type: Any
    __ne__ = ...  # type: Any
    __lt__ = ...  # type: Any
    __le__ = ...  # type: Any
    __ge__ = ...  # type: Any
    __gt__ = ...  # type: Any
    __and__ = ...  # type: Any
    __or__ = ...  # type: Any
    __invert__ = ...  # type: Any
    __rand__ = ...  # type: Any
    __ror__ = ...  # type: Any
    __contains__ = ...  # type: Any
    __getitem__ = ...  # type: Any
    bitwiseOR = ...  # type: Any
    bitwiseAND = ...  # type: Any
    bitwiseXOR = ...  # type: Any
    def getItem(self, key): ...
    def getField(self, name): ...
    def __getattr__(self, item): ...
    def __iter__(self): ...
    rlike = ...  # type: Any
    like = ...  # type: Any
    startswith = ...  # type: Any
    endswith = ...  # type: Any
    def substr(self, startPos, length): ...
    __getslice__ = ...  # type: Any
    def isin(self, *cols): ...
    asc = ...  # type: Any
    desc = ...  # type: Any
    isNull = ...  # type: Any
    isNotNull = ...  # type: Any
    def alias(self, *alias): ...
    name = ...  # type: Any
    def cast(self, dataType): ...
    astype = ...  # type: Any
    def between(self, lowerBound, upperBound): ...
    def when(self, condition, value): ...
    def otherwise(self, value): ...
    def over(self, window): ...
    def __nonzero__(self): ...
    __bool__ = ...  # type: Any

