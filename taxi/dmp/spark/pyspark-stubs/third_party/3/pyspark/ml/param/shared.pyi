# Stubs for pyspark.ml.param.shared (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any
from pyspark.ml.param import *

class HasMaxIter(Params):
    maxIter = ...  # type: Any
    def __init__(self) -> None: ...
    def setMaxIter(self, value): ...
    def getMaxIter(self): ...

class HasRegParam(Params):
    regParam = ...  # type: Any
    def __init__(self) -> None: ...
    def setRegParam(self, value): ...
    def getRegParam(self): ...

class HasFeaturesCol(Params):
    featuresCol = ...  # type: Any
    def __init__(self) -> None: ...
    def setFeaturesCol(self, value): ...
    def getFeaturesCol(self): ...

class HasLabelCol(Params):
    labelCol = ...  # type: Any
    def __init__(self) -> None: ...
    def setLabelCol(self, value): ...
    def getLabelCol(self): ...

class HasPredictionCol(Params):
    predictionCol = ...  # type: Any
    def __init__(self) -> None: ...
    def setPredictionCol(self, value): ...
    def getPredictionCol(self): ...

class HasProbabilityCol(Params):
    probabilityCol = ...  # type: Any
    def __init__(self) -> None: ...
    def setProbabilityCol(self, value): ...
    def getProbabilityCol(self): ...

class HasRawPredictionCol(Params):
    rawPredictionCol = ...  # type: Any
    def __init__(self) -> None: ...
    def setRawPredictionCol(self, value): ...
    def getRawPredictionCol(self): ...

class HasInputCol(Params):
    inputCol = ...  # type: Any
    def __init__(self) -> None: ...
    def setInputCol(self, value): ...
    def getInputCol(self): ...

class HasInputCols(Params):
    inputCols = ...  # type: Any
    def __init__(self) -> None: ...
    def setInputCols(self, value): ...
    def getInputCols(self): ...

class HasOutputCol(Params):
    outputCol = ...  # type: Any
    def __init__(self) -> None: ...
    def setOutputCol(self, value): ...
    def getOutputCol(self): ...

class HasNumFeatures(Params):
    numFeatures = ...  # type: Any
    def __init__(self) -> None: ...
    def setNumFeatures(self, value): ...
    def getNumFeatures(self): ...

class HasCheckpointInterval(Params):
    checkpointInterval = ...  # type: Any
    def __init__(self) -> None: ...
    def setCheckpointInterval(self, value): ...
    def getCheckpointInterval(self): ...

class HasSeed(Params):
    seed = ...  # type: Any
    def __init__(self) -> None: ...
    def setSeed(self, value): ...
    def getSeed(self): ...

class HasTol(Params):
    tol = ...  # type: Any
    def __init__(self) -> None: ...
    def setTol(self, value): ...
    def getTol(self): ...

class HasStepSize(Params):
    stepSize = ...  # type: Any
    def __init__(self) -> None: ...
    def setStepSize(self, value): ...
    def getStepSize(self): ...

class HasHandleInvalid(Params):
    handleInvalid = ...  # type: Any
    def __init__(self) -> None: ...
    def setHandleInvalid(self, value): ...
    def getHandleInvalid(self): ...

class HasElasticNetParam(Params):
    elasticNetParam = ...  # type: Any
    def __init__(self) -> None: ...
    def setElasticNetParam(self, value): ...
    def getElasticNetParam(self): ...

class HasFitIntercept(Params):
    fitIntercept = ...  # type: Any
    def __init__(self) -> None: ...
    def setFitIntercept(self, value): ...
    def getFitIntercept(self): ...

class HasStandardization(Params):
    standardization = ...  # type: Any
    def __init__(self) -> None: ...
    def setStandardization(self, value): ...
    def getStandardization(self): ...

class HasThresholds(Params):
    thresholds = ...  # type: Any
    def __init__(self) -> None: ...
    def setThresholds(self, value): ...
    def getThresholds(self): ...

class HasWeightCol(Params):
    weightCol = ...  # type: Any
    def __init__(self) -> None: ...
    def setWeightCol(self, value): ...
    def getWeightCol(self): ...

class HasSolver(Params):
    solver = ...  # type: Any
    def __init__(self) -> None: ...
    def setSolver(self, value): ...
    def getSolver(self): ...

class HasVarianceCol(Params):
    varianceCol = ...  # type: Any
    def __init__(self) -> None: ...
    def setVarianceCol(self, value): ...
    def getVarianceCol(self): ...

class HasAggregationDepth(Params):
    aggregationDepth = ...  # type: Any
    def __init__(self) -> None: ...
    def setAggregationDepth(self, value): ...
    def getAggregationDepth(self): ...

class DecisionTreeParams(Params):
    maxDepth = ...  # type: Any
    maxBins = ...  # type: Any
    minInstancesPerNode = ...  # type: Any
    minInfoGain = ...  # type: Any
    maxMemoryInMB = ...  # type: Any
    cacheNodeIds = ...  # type: Any
    def __init__(self) -> None: ...
    def setMaxDepth(self, value): ...
    def getMaxDepth(self): ...
    def setMaxBins(self, value): ...
    def getMaxBins(self): ...
    def setMinInstancesPerNode(self, value): ...
    def getMinInstancesPerNode(self): ...
    def setMinInfoGain(self, value): ...
    def getMinInfoGain(self): ...
    def setMaxMemoryInMB(self, value): ...
    def getMaxMemoryInMB(self): ...
    def setCacheNodeIds(self, value): ...
    def getCacheNodeIds(self): ...
