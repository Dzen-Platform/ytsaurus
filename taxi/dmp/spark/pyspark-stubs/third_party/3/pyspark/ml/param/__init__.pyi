# Stubs for pyspark.ml.param (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from pyspark.ml.util import Identifiable

class Param:
    parent = ...  # type: Any
    name = ...  # type: Any
    doc = ...  # type: Any
    typeConverter = ...  # type: Any
    def __init__(self, parent, name, doc, typeConverter: Optional[Any] = ...) -> None: ...
    def __hash__(self): ...
    def __eq__(self, other): ...

class TypeConverters:
    @staticmethod
    def identity(value): ...
    @staticmethod
    def toList(value): ...
    @staticmethod
    def toListFloat(value): ...
    @staticmethod
    def toListInt(value): ...
    @staticmethod
    def toListString(value): ...
    @staticmethod
    def toVector(value): ...
    @staticmethod
    def toFloat(value): ...
    @staticmethod
    def toInt(value): ...
    @staticmethod
    def toString(value): ...
    @staticmethod
    def toBoolean(value): ...

class Params(Identifiable):
    __metaclass__ = ...  # type: Any
    def __init__(self) -> None: ...
    @property
    def params(self): ...
    def explainParam(self, param): ...
    def explainParams(self): ...
    def getParam(self, paramName): ...
    def isSet(self, param): ...
    def hasDefault(self, param): ...
    def isDefined(self, param): ...
    def hasParam(self, paramName): ...
    def getOrDefault(self, param): ...
    def extractParamMap(self, extra: Optional[Any] = ...): ...
    def copy(self, extra: Optional[Any] = ...): ...
