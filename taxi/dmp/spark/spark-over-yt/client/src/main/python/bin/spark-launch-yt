#!/usr/bin/env python

import sys
import os
spark_home = os.environ.get("SPARK_HOME") or "/usr/lib/yandex/spark"
sys.path.append(os.path.join(spark_home, "bin", "python"))

from yt.wrapper import YtClient
from yt.wrapper.cli_helpers import ParseStructuredArgument
from yt.wrapper.http_helpers import get_user_name
from spyt.standalone import start_spark_cluster
from spyt import utils as spark_utils


def main():
    parser = spark_utils.get_default_arg_parser(description="Spark over YT")

    parser.add_argument("--worker-cores", required=True, type=int)
    parser.add_argument("--worker-memory", required=True)
    parser.add_argument("--worker-num", required=True, type=int)
    parser.add_argument("--worker-timeout", required=False, default="5m")
    parser.add_argument("--pool", required=False)
    parser.add_argument("--tmpfs-limit", required=False, default="150G")
    parser.add_argument("--master-memory-limit", required=False, default="2G")
    parser.add_argument("--history-server-memory-limit", required=False, default="8G")
    parser.add_argument("--operation-alias", required=False)
    parser.add_argument("--dynamic-config-path", required=False, default="//sys/spark/conf/releases/spark-launch-conf")
    parser.add_argument("--operation-spec", required=False, action=ParseStructuredArgument,  dest="operation_spec",
                        default={"annotations": {"is_spark": True}, "max_failed_job_count": 5, "max_stderr_count": 150})

    args, unknown_args = spark_utils.parse_args(parser)

    yt_client = YtClient(proxy=args.proxy, token=spark_utils.default_token())

    start_spark_cluster(worker_cores=args.worker_cores,
                        worker_memory=args.worker_memory,
                        worker_num=args.worker_num,
                        worker_timeout=args.worker_timeout,
                        operation_alias=args.operation_alias,
                        discovery_path=args.discovery_path,
                        pool=args.pool or get_user_name(client=yt_client),
                        tmpfs_limit=args.tmpfs_limit,
                        master_memory_limit=args.master_memory_limit,
                        history_server_memory_limit=args.history_server_memory_limit,
                        dynamic_config_path=args.dynamic_config_path,
                        operation_spec=args.operation_spec,
                        client=yt_client)


if __name__ == '__main__':
    main()
