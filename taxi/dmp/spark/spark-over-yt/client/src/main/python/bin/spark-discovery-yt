#!/usr/bin/env python

from __future__ import print_function

import sys

import yt
from yt.wrapper import YPath
from yt.wrapper.cypress_commands import list
from yt.wrapper.errors import YtHttpResponseError
from yt.wrapper.operation_commands import get_operation_url

from yt_spark_client import utils as spark_utils


def get_address(name, spark_id, discovery_dir):
    try:
        path = YPath(discovery_dir).join("instances").join(spark_id).join(name)
        return list(path)[0]
    except YtHttpResponseError as e:
        print(e.message, file=sys.stderr)
        for inner in e.inner_errors:
            print(inner["message"], file=sys.stderr)


def main():
    args, unknowm_args = spark_utils.parse_args(parser_arguments=dict(description="Spark Discovery"))

    # TODO switch to YtClient
    yt.wrapper.config.config['proxy']['url'] = args.proxy

    master = get_address("address", args.id, args.discovery_dir)
    master_web_ui = get_address("webui", args.id, args.discovery_dir)
    master_rest = get_address("rest", args.id, args.discovery_dir)
    operation = get_address("operation", args.id, args.discovery_dir)
    shs = get_address("shs", args.id, args.discovery_dir)

    print("Master: %s" % master)
    print("Master Web UI: http://%s/" % master_web_ui)
    print("Master REST API Endpoint: %s" % master_rest)
    print("Operation: %s" % get_operation_url(operation))
    print("Spark History Server: http://%s/" % shs)


if __name__ == '__main__':
    main()
