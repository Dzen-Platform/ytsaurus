#!/usr/bin/env python

import sys
import os
import subprocess

spark_home = os.environ.get("SPARK_HOME")
if spark_home is None:
    try:
        bin_dir = os.path.dirname(os.path.realpath(__file__))
        spark_home = subprocess.check_output("find_spark_home.py").strip().decode("utf-8")
    except:
        raise RuntimeError("Unable to find SPARK_HOME automatically from {}".format(os.path.realpath(__file__)))

sys.path.insert(0, os.path.join(spark_home, "bin", "python"))

from yt.wrapper import YtClient
from spyt.standalone import raw_submit
from spyt import utils as spark_utils


def main():
    parser = spark_utils.get_default_arg_parser(description="Spark Submit")
    parser.add_argument("--spyt-version", required=False)
    parser.add_argument("--python-version", required=False)

    args, unknown_args = spark_utils.parse_args(parser)
    yt_client = YtClient(proxy=args.proxy, token=spark_utils.default_token())
    return_code = raw_submit(discovery_path=args.discovery_path,
                             spark_home=spark_home,
                             spark_args=unknown_args,
                             spyt_version=args.spyt_version,
                             python_version=args.python_version,
                             client=yt_client,
                             spark_id=args.id)
    exit(return_code)


if __name__ == '__main__':
    main()
