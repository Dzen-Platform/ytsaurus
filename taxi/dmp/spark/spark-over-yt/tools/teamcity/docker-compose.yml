version: "3"

services:
  test_spyt:
    image: registry.yandex.net/taxi-dmp-spark/spyt-test-base:${SPYT_TEST_IMAGE_TAG:-latest}
    container_name: test_spyt
    network_mode: host
    user: root
    volumes:
      # приложение
      - ../../.:/app
      # опциональный кеш и сбор репортов, если переменные не заданы -- будут использованы
      # fallback-тома
      - ${SPYT_REPORTS_DIR:-reports}:/reports
      - ${SPYT_CACHE_DIR:-cache}:/${HOME}/.cache
      - ${SPYT_IVY_DIR:-ivy}:/cache/ivy
      - ${SPYT_SBT_DIR:-sbt}:/cache/sbt
      # фаллбек рут -- больше вероятность попасть на валидный config.json
      # в контексте, в котором HOME не определен
      - ${HOME:-root}/.docker/config.json:${HOME:-/home/sbtuser}/.docker/config.json:ro
      - /run/docker.sock:/run/docker.sock
    entrypoint: /bin/sh tools/teamcity/entrypoint.sh
    environment:
      # матчим пользователя с хостом
      - USER=${USER:-sbtuser}
      - HOST_DOCKER_GROUP_ID=${HOST_DOCKER_GROUP_ID:-999}
      - HOME=${HOME:-/home/sbtuser}
      # note: UID должен быть экспортирован или установлен в контексте запуска
      - UID=${UID:-1000}
      - SBT_COMMAND=${SBT_COMMAND:-test}
      - YT_TOKEN
      - PROJECT_ROOT=${PROJECT_ROOT:-/app}

volumes:
  # fallback-тома для кеша и сбора junit-отчетов
  cache:
  ivy:
  sbt:
  reports:
