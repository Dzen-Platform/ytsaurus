package NYT.NProtobufFormatTest;

enum EEnum
{
    one = 1;
    two = 2;
    three = 3;

    minus_forty_two = -42;

    min_int32 = -2147483648;
    max_int32 = 2147483647;
}

message TEmbeddedMessage
{
    optional string key = 1;
    optional string value = 2;
}

message TMessageWithStructuredEmbedded
{
    message TFirstMessage
    {
        optional EEnum enum_field = 1;
        optional int64 int64_field = 2;
        repeated int64 repeated_int64_field = 3;
        optional TEmbeddedMessage message_field = 4;
        repeated TEmbeddedMessage repeated_message_field = 5;
        optional bytes any_int64_field = 6;
        optional bytes any_map_field = 7;
        optional int64 optional_int64_field = 8;
    }

    message TSecondMessage
    {
        optional int64 one = 2;
        optional int64 two = 500000000;
        optional int64 three = 100500;
    }

    optional TFirstMessage first = 1;
    optional TSecondMessage second = 2;
    repeated TEmbeddedMessage repeated_message_field = 3;
    repeated int64 repeated_int64_field = 4;
    optional int64 int64_any_field = 5;

    optional int32 int32_field = 6;
    optional uint32 uint32_field = 7;
    optional int64 int64_field = 8;
    optional uint64 uint64_field = 9;

    optional EEnum enum_int_field = 10;
    optional EEnum enum_string_string_field = 11;
    optional EEnum enum_string_int64_field = 12;
}

message TSeveralTablesMessageFirst
{
    message TEmbedded
    {
        optional EEnum enum_field = 1;
        optional int64 int64_field = 2;
    }
    optional TEmbedded embedded = 1;
    repeated int64 repeated_int64_field = 2;
    optional int64 int64_field = 3;
}

message TSeveralTablesMessageSecond
{
    optional EEnum enum_field = 1;
    optional int64 int64_field = 2;
}

message TSeveralTablesMessageThird
{
    optional string string_field = 1;
}

message TMessage
{
    optional double double_field = 1;
    optional float float_field = 2;

    optional int64 int64_field = 3;
    optional uint64 uint64_field = 4;
    optional sint64 sint64_field = 5;
    optional fixed64 fixed64_field = 6;
    optional sfixed64 sfixed64_field = 7;

    optional int32 int32_field = 8;
    optional uint32 uint32_field = 9;
    optional sint32 sint32_field = 10;
    optional fixed32 fixed32_field = 11;
    optional sfixed32 sfixed32_field = 12;

    optional bool bool_field = 13;
    optional string string_field = 14;
    optional bytes bytes_field = 15;

    optional EEnum enum_field = 16;
    optional TEmbeddedMessage message_field = 17;

    optional bytes any_field_with_map = 18;
    optional bytes any_field_with_int64 = 19;
    optional bytes any_field_with_string = 20;
    optional bytes other_columns_field = 21;

    optional int64 missing_int64_field = 22;
}
