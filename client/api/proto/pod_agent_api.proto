syntax = "proto3";

option java_package = "ru.yandex.yp.client.pods";
option java_outer_classname = "PodApi";

package NInfra.NPodAgent.API;

import "yp/client/api/proto/data_model.proto";
import "yp/client/api/proto/pod_agent.proto";
import "yp/client/api/proto/secrets.proto";

// messages used for node_agent <-> pod_agent communication

// NOTE: В будущем Pod-agent будет принимать только это сообщение, сейчас он все еще принимает TPodAgentSpec отдельно для обратной совместимости
// NOTE: Валидация - все alias секретов различны
message TPodAgentRequest {
    reserved 4;

    // Конфигурация Пода
    TPodAgentSpec spec = 1;

    // Секреты (raw, unencrypted)
    repeated NYP.NClient.NApi.NProto.TSecret secrets = 2;

    // Кэш ресурсы для пода
    TPodAgentResourceCacheSpec resource_cache_spec = 3;

    // Подсети пода, подсеть с id=boxes_subnet будет использоваться для выдачи ip каждому box
    repeated NYP.NClient.NApi.NProto.TPodStatus.TIP6SubnetAllocation ip6_subnet_allocations = 5;
}

// Спека для получения расширенного debug состояния pod_agent
message TPodAgentDebugSpec {
    repeated string workload_ids = 1;
    repeated string layer_ids = 2;
    repeated string volume_ids = 3;
    repeated string box_ids = 4;
    repeated string static_resource_ids = 5;
}

// Расширенный debug status возвращаемый Pod-agent
message TPodAgentDebugStatus {
    // Состояние behavior tree для workloads в dot формате
    map<string, string> workload_tree_dots = 1;
    // Состояние behavior tree для layers в dot формате
    map<string, string> layer_tree_dots = 2;
    // Состояние behavior tree для volumes в dot формате
    map<string, string> volume_tree_dots = 3;
    // Состояние behavior tree для boxes в dot формате
    map<string, string> box_tree_dots = 4;
    // Состояние behavior tree для layers в dot формате
    map<string, string> static_resources_tree_dots = 5;
}

