syntax = "proto3";

package NYP.NClient.NApi.NProto;

import "yt/core/yson/proto/protobuf_interop.proto";

option python_package = "yp_proto.yp.client.api.proto";

option java_package = "ru.yandex.yp.client.api";
option java_outer_classname = "Enums";

option go_package = "a.yandex-team.ru/yp/go/proto/api";

////////////////////////////////////////////////////////////////////////////////

enum EResourceKind
{
    RK_CPU = 0
    [(NYT.NYson.NProto.enum_value_name) = "cpu"];

    RK_MEMORY = 1
    [(NYT.NYson.NProto.enum_value_name) = "memory"];

    RK_DISK = 2
    [(NYT.NYson.NProto.enum_value_name) = "disk"];

    RK_SLOT = 3
    [(NYT.NYson.NProto.enum_value_name) = "slot"];

    RK_GPU = 4
    [(NYT.NYson.NProto.enum_value_name) = "gpu"];

    RK_NETWORK = 5
    [(NYT.NYson.NProto.enum_value_name) = "network"];

    RK_UNDEFINED = -1
    [(NYT.NYson.NProto.enum_value_name) = "undefined"];
}

enum EPodHostNameKind
{
    PHNK_TRANSIENT = 0
    [(NYT.NYson.NProto.enum_value_name) = "transient"];

    PHNK_PERSISTENT = 1
    [(NYT.NYson.NProto.enum_value_name) = "persistent"];
}

enum EPodOutOfMemoryPolicy
{
    OOMP_DEFAULT = 0
    [(NYT.NYson.NProto.enum_value_name) = "default"];

    OOMP_REBUILD_POD = 1
    [(NYT.NYson.NProto.enum_value_name) = "rebuild-pod"];

    OOMP_KILL_PROCESS = 2
    [(NYT.NYson.NProto.enum_value_name) = "kill-process"];
}

enum EEventType
{
    ET_OBJECT_NONE = 0
    [(NYT.NYson.NProto.enum_value_name) = "none"];

    ET_OBJECT_CREATED = 1
    [(NYT.NYson.NProto.enum_value_name) = "object_created"];

    ET_OBJECT_REMOVED = 2
    [(NYT.NYson.NProto.enum_value_name) = "object_removed"];

    ET_OBJECT_UPDATED = 3
    [(NYT.NYson.NProto.enum_value_name) = "object_updated"];
}

enum ESchedulingState
{
    SS_NONE = 0
    [(NYT.NYson.NProto.enum_value_name) = "none"];

    SS_DISABLED = 100
    [(NYT.NYson.NProto.enum_value_name) = "disabled"];

    SS_PENDING = 200
    [(NYT.NYson.NProto.enum_value_name) = "pending"];

    SS_ASSIGNED = 300
    [(NYT.NYson.NProto.enum_value_name) = "assigned"];
}

////////////////////////////////////////////////////////////////////////////////
