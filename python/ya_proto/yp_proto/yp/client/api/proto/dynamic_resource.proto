syntax = "proto3";

package NYP.NClient.NApi.NProto;

import "yp_proto/yp/client/api/proto/data_model.proto";
import "yp_proto/yp/client/api/proto/conditions.proto";

import "yt/core/yson/proto/protobuf_interop.proto";

option java_package = "ru.yandex.yp.client.api";
option java_outer_classname = "DynamicResource";

option (NYP.NClient.NApi.NProto.object_type) = {
    camel_case_name: "DynamicResource"
    snake_case_name: "dynamic_resource"
    type_value: 17
};

// for field descriptions see NYP.NClient.NApi.NProto.TSchemaMeta
message TDynamicResourceMetaBase {
    // id of pod_set where to deploy the resource
    string pod_set_id = 4;
};

message TDynamicResourceSpec {
    // resource revision, server-side incremented sequence, monotonic
    uint64 revision = 1;

    // url where to download the resource from
    // supported protocols: http, https, rbtorrent, raw
    // (for raw resources use raw:<base64>)
    string url = 2;

    // options how to handle resource inside the box
    TPodDynamicResourceSpec.TStorageOptions storage_options = 3;
    
    // size of the update window in pods
    uint32 update_window = 4;

}

message TDynamicResourceStatus {
    message TRevisionStatus {
        // revision id
        uint64 revision = 1;
        // amount of pods where this revision is active
        TAggregatedCondition ready = 2;
        // amount of pods where this revision is currently updating
        TAggregatedCondition in_progress = 3;
        // amount of pods where resource update failed on installing this revision
        TAggregatedCondition error = 4;
    }
    repeated TRevisionStatus revisions = 1;
}
